import {GroupBox, LineEdit, Button, ComboBox, ListView, HorizontalBox} from "std-widgets.slint";

export global State {
  callback enter_key(string);
  callback listen(string, string);
}
export struct DeviceItem {
    name: string,
    count: int,
}

component DeviceView inherits HorizontalBox {
        in-out property <DeviceItem> device;
        Text {
            text: device.name;
        }
        Text {
            text: device.count;
        }
        Button {
        text: "归零";
        clicked => {
            device.count = 0;
        }
        }
}
component DataList inherits ListView {
    width: 500px;
    height: 400px;
    in-out property <[DeviceItem]> devices: [
    {name: "1", count: 1},
    {name: "1", count: 1},
    {name: "1", count: 1},
    {name: "1", count: 1},
    {name: "1", count: 1},
    {name: "1", count: 1},
    {name: "1", count: 1},
    {name: "1", count: 1},
    {name: "1", count: 1},
    {name: "1", count: 1},
    {name: "1", count: 1},
    {name: "1", count: 1},
    {name: "1", count: 1},
    ];
    for device in devices : DeviceView {
        device: device;
    }
}

export component MainWindow inherits Window {
  title: "LoraWan 计数";
  in-out property <string> key;
  in-out property <[string]> model: ["选择应用"];
  in-out property <[DeviceItem]> devices;
  width: 600px;
  height: 600px;
 
  VerticalLayout { 
    alignment:start;
    padding-left: 25px;
    padding-right: 25px;
 
    Text { 
      font-size: 27px;
      font-weight: 700;
      color: #6776FF;  
     }
 
    GroupBox{
       title:"API Key";
       LineEdit {
        edited(s) => {
          root.key = s;
        }
         placeholder-text: "请输入API KEY";
      }
    }
 
    Button {
       text: "获取应用";
       clicked => {
        State.enter-key(root.key);
        }
    }

    box := ComboBox {
      model: root.model;
      current-value: "选择应用";
    }

    Button {
          text: "开始监听";
          clicked => {
            State.listen(root.key, box.current-value);
         }
      }
    DataList {
    devices: devices;
    }
  }
}
